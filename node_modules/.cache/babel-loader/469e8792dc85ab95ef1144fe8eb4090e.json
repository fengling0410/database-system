{"ast":null,"code":"var _jsxFileName = \"/Users/lingfeng/Desktop/sem3/MIT_Database_System/webpage/src/Views/Home.js\";\nimport React from 'react';\nimport MyImage from '../Images/missing.png';\n\nfunction Home(props) {\n  // Create your own Mock API: https://mockapi.io/\n  // const url = `https://5e9623dc5b19f10016b5e31f.mockapi.io/api/v1/products?page=1&limit=10`\n  // let products = useAxiosGet(url)\n  const {\n    classes\n  } = props;\n  const inputFile = useRef(null); // Component States\n\n  const [dbfile, setdbfile] = useState(null);\n\n  const handleImageUploadClick = () => {\n    inputFile.current.click();\n  };\n\n  const handleOnChange = event => {\n    console.log(event.target.files);\n    setImage(URL.createObjectURL(event.target.files[0]));\n    var formData = new FormData();\n    formData.append(\"file\", event.target.files[0]);\n    DataService.Predict(formData).then(function (response) {\n      console.log(response.data);\n      setPrediction(response.data);\n    });\n  };\n\n  let content = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"This is our project for missing value imputation, upload a database to get started!\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: MyImage,\n    alt: \"horse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dropzone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    on: true,\n    autocomplete: \"off\",\n    tabindex: \"-1\",\n    className: classes.fileInput,\n    ref: inputFile,\n    onChange: event => handleOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"font-bold text-2xl mb-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Database Missing Value Imputation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"md:flex flex-wrap md:-mx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, content));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/lingfeng/Desktop/sem3/MIT_Database_System/webpage/src/Views/Home.js"],"names":["React","MyImage","Home","props","classes","inputFile","useRef","dbfile","setdbfile","useState","handleImageUploadClick","current","click","handleOnChange","event","console","log","target","files","setImage","URL","createObjectURL","formData","FormData","append","DataService","Predict","then","response","data","setPrediction","content","dropzone","fileInput"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAChB;AACA;AACA;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAME,SAAS,GAAGC,MAAM,CAAC,IAAD,CAAxB,CANgB,CAQhB;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMC,sBAAsB,GAAG,MAAM;AACjCL,IAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAlB;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAC,IAAAA,QAAQ,CAACC,GAAG,CAACC,eAAJ,CAAoBP,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB,CAAD,CAAR;AAEA,QAAII,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBV,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAxB;AACAO,IAAAA,WAAW,CAACC,OAAZ,CAAoBJ,QAApB,EACKK,IADL,CACU,UAAUC,QAAV,EAAoB;AACtBb,MAAAA,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAACC,IAArB;AACAC,MAAAA,aAAa,CAACF,QAAQ,CAACC,IAAV,CAAb;AACH,KAJL;AAKH,GAXD;;AAaA,MAAIE,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACV;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FADU,eAIV;AAAK,IAAA,GAAG,EAAE9B,OAAV;AAAmB,IAAA,GAAG,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJU,eAKV;AAAK,IAAA,SAAS,EAAEG,OAAO,CAAC4B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,MAAM,EAAC,SAFX;AAGI,IAAA,EAAE,MAHN;AAII,IAAA,YAAY,EAAC,KAJjB;AAKI,IAAA,QAAQ,EAAC,IALb;AAMI,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SANvB;AAOI,IAAA,GAAG,EAAE5B,SAPT;AAQI,IAAA,QAAQ,EAAGS,KAAD,IAAWD,cAAc,CAACC,KAAD,CARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CALU,CAAd;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,eAII;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMiB,OADN,CAJJ,CADJ;AAUH;;AAED,eAAe7B,IAAf","sourcesContent":["import React from 'react'\nimport MyImage from '../Images/missing.png';\n\nfunction Home(props){\n    // Create your own Mock API: https://mockapi.io/\n    // const url = `https://5e9623dc5b19f10016b5e31f.mockapi.io/api/v1/products?page=1&limit=10`\n    // let products = useAxiosGet(url)\n\n    const { classes } = props;\n    const inputFile = useRef(null);\n\n    // Component States\n    const [dbfile, setdbfile] = useState(null);\n\n    const handleImageUploadClick = () => {\n        inputFile.current.click();\n    }\n\n    const handleOnChange = (event) => {\n        console.log(event.target.files);\n        setImage(URL.createObjectURL(event.target.files[0]));\n\n        var formData = new FormData();\n        formData.append(\"file\", event.target.files[0]);\n        DataService.Predict(formData)\n            .then(function (response) {\n                console.log(response.data);\n                setPrediction(response.data);\n            })\n    }\n\n    let content = <div>\n        <div className=\"mb-2 p-3\">\n            This is our project for missing value imputation, upload a database to get started!\n        </div>\n        <img src={MyImage} alt=\"horse\" />\n        <div className={classes.dropzone}>\n        <input\n            type=\"file\"\n            accept=\"image/*\"\n            on\n            autocomplete=\"off\"\n            tabindex=\"-1\"\n            className={classes.fileInput}\n            ref={inputFile}\n            onChange={(event) => handleOnChange(event)}\n            />\n        </div>\n    </div>\n\n\n    return (\n        <div className=\"container mx-auto\">\n            <h1 className=\"font-bold text-2xl mb-3 text-center\">\n                Database Missing Value Imputation\n            </h1>\n            <div className=\"md:flex flex-wrap md:-mx-3\">\n                { content } \n            </div>\n        </div>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}